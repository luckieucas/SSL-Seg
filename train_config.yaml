exp: "randomflip"
method: Baseline # use which semi-supervised method [Baseline,MT,EM,C3PS,DAN,CPS,UAMT]
backbone: unet_3D_old # backbone model
dataset_name: MMWHS
gpu: '0'
root_path: '../data/dBraTS2019'
continue_training: False
FP16: False
model_checkpoint: "../model/MMWHS_2_C3PS_SGD_noFP16_semi/unet_3D_old/model_iter_5400_dice_0.7647.pth"
model2_checkpoint: "../model/C3PS_effectofsemi_finetune_2_MMWHS_condition/unet_3D/model2_iter_25000_dice_0.7672.pth"
current_iter_num: 0
began_semi_iter: 2000  #8000 #2000
began_condition_iter: 8000 #4000
began_eval_iter: 2000 # 300
val_freq: 200 #200
max_iterations: 20000
use_CAC: True   # whether use Context-Aware-Consistency
deterministic: 1
initial_lr: 0.01
optimizer_type: 'SGD' # ['SGD' or 'Adam']
seed: 1337
ema_decay: 0.99
consistency_type: mse
consistency: 0.1
consistency_rampup: 200.0
weight_decay: 0.00001
lr_scheduler_patience: 30
lr_scheduler_eps: 0.001
show_img_freq: 100
save_checkpoint_freq: 3000

METHOD:
  ICT:
    ict_alpha: 0.2
  MT:
  UAMT:
  CPS:
  DAN:
  EM:
  Baseline:
  URPC:
  C3PS: # config for Context-Aware-Consistency
    stride: 4
    iou_bound_low: 0.25
    iou_bound_high: 0.95
DATASET:
  labeled_num: 2
  labeled_bs: 1
  batch_size: 2
  patch_size: [96,160,160]
  cutout: False # do random cutout
  affine_trans: False  # do affine transformation
  random_rotflip: True # do random rotation and flip
  edge_prob: 0.1 # prob to learn edge slice
  MMWHS: # config for MMWHS dataset
    num_classes: 8
    train_list: "../data/MMWHS/MMWHS_train.txt"
    test_list: "../data/MMWHS/MMWHS_test.txt"
    training_data_num: 14
    testing_data_num: 6
    cut_upper: 1000
    cut_lower: -1000
  MMWHS_MR: # config for MMWHS dataset
    num_classes: 8
    train_list: "../data/MMWHS_MR/train.txt"
    test_list: "../data/MMWHS_MR/test.txt"
    training_data_num: 14
    testing_data_num: 6
    cut_upper: 1000
    cut_lower: -1000
  BCV: # config for BCV dataset
    num_classes: 6
    train_list: "../data/BCV/train.txt"
    test_list: "../data/BCV/test.txt"
    training_data_num: 24
    testing_data_num: 6 
    cut_upper: 200
    cut_lower: -68
  FLARE: # config for BCV dataset
    num_classes: 14
    train_list: "../data/FLARE22/Flare22_train.txt"
    test_list: "../data/FLARE22/Flare22_test.txt"
    training_data_num: 2038
    testing_data_num: 10 



model:
  # model class, e.g. UNet3D, ResidualUNet3D
  name: Semi3DUNet
  # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 8
  # determines the order of operators in a single layer (gcr - GroupNorm+Conv3d+ReLU)
  layer_order: gcr
  # feature maps scale factor
  f_maps: 16 #16
  # number of levels
  num_levels: 5 #4
  # number of groups in the groupnorm
  num_groups: 8
  # apply element-wise nn.Sigmoid after the final 1x1 convolution, otherwise apply nn.Softmax
  final_sigmoid: False
  # if True applies the final normalization layer (sigmoid or softmax), otherwise the networks returns the output from the final convolution layer; use False for regression problems, e.g. de-noising
  is_segmentation: true